/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//@ Programmers Algorithm - 2020 / 06 / 22
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// * 문제
- 문제이름 : 저울

문제 설명
하나의 양팔 저울을 이용하여 물건의 무게를 측정하려고 합니다. 
이 저울의 양팔의 끝에는 물건이나 추를 올려놓는 접시가 달려 있고, 양팔의 길이는 같습니다.
또한, 저울의 한쪽에는 저울추들만 놓을 수 있고, 다른 쪽에는 무게를 측정하려는 물건만 올려놓을 수 있습니다.

저울추가 담긴 배열 weight가 매개변수로 주어질 때,
이 추들로 측정할 수 없는 양의 정수 무게 중 최솟값을 return 하도록 solution 함수를 작성해주세요.

예를 들어, 무게가 각각 [3, 1, 6, 2, 7, 30, 1]인 7개의 저울추를 주어졌을 때,
이 추들로 측정할 수 없는 양의 정수 무게 중 최솟값은 21입니다.

제한 사항
저울추의 개수는 1개 이상 10,000개 이하입니다.
각 추의 무게는 1 이상 1,000,000 이하입니다.
입출력 예
weight	return
[3, 1, 6, 2, 7, 30, 1]	21


/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// * 해결 방법

1. 정렬 오름차순
2. 처음 Input 을 1로 잡는다. 최솟값이기 때문에
3. 만약 '현재 인덱스까지의 합' 이 '다음 인덱스 값' 보다 작거나 같으면 모든 수를 표현 가능하다.

Ex) Temp = { 1, 2, 4 } 라면
Input = 1, Temp[0] <= Input 이므로 Input += Temp[0]
Input = 2, Temp[1] <= Input 이므로 Input += Temp[1]
Input = 4, Temp[2] <= Input 이므로 Input += Temp[2]

따라서 합으로써 표현하지 못하는 최소값은 8이 된다. 계산 해보면 알 수 있다.

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// * 시행착오

다른 방법이 떠오르지 않아서 우선 해보자는 마음에
dfs 로 모든 경우의 수를 찾았다.
그랬더니 역시나 속도가 너무 느렸다.
도저히 보이지 않아서 다른 분들이 푼 것을 참고했다.
수학적으로 이런식으로 풀 수 있다는 것에 매우 놀랐고 새로운 사실을 알았다는 것에 기뻤지만
스스로 못 풀었다는 것에 자존심 상했다.
나중에 응용할 수 있도록 기억할 것이다.

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// * 다른 코드


/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////






