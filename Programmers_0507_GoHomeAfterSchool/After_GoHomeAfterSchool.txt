/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//@ Programmers Algorithm - 2020 / 05 / 07
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// * 문제
- 문제이름 : 등굣길

계속되는 폭우로 일부 지역이 물에 잠겼습니다. 
물에 잠기지 않은 지역을 통해 학교를 가려고 합니다. 
집에서 학교까지 가는 길은 m x n 크기의 격자모양으로 나타낼 수 있습니다.

가장 왼쪽 위, 즉 집이 있는 곳의 좌표는 
(1, 1)로 나타내고 가장 오른쪽 아래, 즉 학교가 있는 곳의 좌표는 (m, n)으로 나타냅니다.

격자의 크기 m, n과 물이 잠긴 지역의 좌표를 담은 2차원 배열 puddles이 매개변수로 주어집니다.
집에서 학교까지 갈 수 있는 최단경로의 개수를 1,000,000,007로 나눈 나머지를 return 하도록 solution 함수를 작성해주세요.

제한사항
격자의 크기 m, n은 1 이상 100 이하인 자연수입니다.
m과 n이 모두 1인 경우는 입력으로 주어지지 않습니다.
물에 잠긴 지역은 0개 이상 10개 이하입니다.
집과 학교가 물에 잠긴 경우는 입력으로 주어지지 않습니다.

입출력 예
m	n	puddles	return
4	3	[[2, 2]]


/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// * 해결 방법

이전에 배운 DP 방법을 이용해서,

1. 2차원 배열 만듬 - 첫번째 행 모두 1, 첫번째 열 모두 1, 나머지 모두 -1
2. 웅덩이를 표시함
- 문제에서의 의도는 오른쪽, 아래로만 움직일 수 있음
때문에 웅덩이를 표시하는데, 만약 첫번째 행과 열에 웅덩이가 있다면 그 뒤에 수들은 모두 0 값
3. 첫번째 행, 열 들을 1로 표시한 것은 그 길이 갈 수 있는 경우의 수를 나타냄
따라서,
행=1, 열=1 부터 위와 왼쪽 값들을 더하게 되면 그 위치로 갈 수 있는 경우의 수가 나옴
이 원리를 이용해서 마지막까지 계산해가면 Map[n-1][m-1] 에는 최종적으로 갈 수 있는 경우의 수가 나오게 됨.

** 주의 **
- 만약 문제에서 처럼 오른쪽과 아래쪽 만으로 움직인다는 보장이 없다면, 어떤식으로 짜야될까
위에서 그 뒤의 수들을 다 0으로 처리하는 부분을 빼기만 하면,
여러 방향으로 움직일 수 있다고 해도
최종적 Map[n-1][m-1] 부분에 최단경로의 개수가 들어갈 것이다. 확인해봐라.



/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// * 시행착오

Index 를 해깔렸다..
문제에서 보통의 행과 열을 바꿔서 주었다.
즉, m 이 열이고, n 이 행이다.
인덱스로 들어가면 -1 해주는 것도 실수 했다..

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// * 다른 코드

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////






