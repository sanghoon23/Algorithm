/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//@ Programmers Algorithm - 2020 / 09 / 30
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

//@링크 - https://programmers.co.kr/learn/courses/30/lessons/12911
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// * 문제
- 문제이름 : 다음에 큰 숫자

자연수 n이 주어졌을 때, n의 다음 큰 숫자는 다음과 같이 정의 합니다.

조건 1. n의 다음 큰 숫자는 n보다 큰 자연수 입니다.
조건 2. n의 다음 큰 숫자와 n은 2진수로 변환했을 때 1의 갯수가 같습니다.
조건 3. n의 다음 큰 숫자는 조건 1, 2를 만족하는 수 중 가장 작은 수 입니다.
예를 들어서 78(1001110)의 다음 큰 숫자는 83(1010011)입니다.

자연수 n이 매개변수로 주어질 때, n의 다음 큰 숫자를 return 하는 solution 함수를 완성해주세요.

제한 사항
n은 1,000,000 이하의 자연수 입니다.
입출력 예
n	result
78	83
15	23
입출력 예 설명
입출력 예#1
문제 예시와 같습니다.
입출력 예#2
15(1111)의 다음 큰 숫자는 23(10111)입니다.


/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// * 해결 방법

*문제에서의 핵심 조건은 1의 갯수가 같냐이다. 또, 쉽게 범위도 정해졌다.
이제 범위에서 2진법 숫자로 바꾸는 과정에서 1이 몇개 존재하는지 확인하면 된다.
N 은 늘려가면서 2진법으로 바꿀 때 존재한 1의 숫자와 같다면 return 한다.

다른 분들의 코드를 보니 비트연산으로 각 자리의 비트를 확인해가면서 풀었는데
지금의 나로썬 정확하게 뭔소린지 모르겠다. 비트연산을 공부해야겠다.

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// * 다른 코드

int getCntNum1(int n)
{
  int nCnt = 0;
  for (int i=0; i<31; i++)
  {
    if (n & 0x01 << i)
      nCnt++;
  }
  return nCnt;
}

int nextBigNumber(int n)
{
  int nNum1Cnt = getCntNum1(n);

  while(1)
  {
    n++;
    if (nNum1Cnt == getCntNum1(n))
      return n;
  }
}

int main()
{
    int n=832656;

    //아래는 테스트 출력을 위한 코드입니다.
    cout<<nextBigNumber(n);
}


/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////






