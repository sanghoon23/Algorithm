/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//@ HakerRanks Algorithm - 2020 / 01 / 21
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// * 문제
BiggerIsGreater

- Input
N = test case ( 경우의 수 )
w = string Container. ( 각각의 string )

- Output
해당 문자열의 다음 크기의 문자열이 존재한다면 return ResultString
그렇지 않다면, return "No answer"

- Ex)
w = abcd 이라면,
w 의 Next Largest word is abdc.

들어온 Input 값 문자열의 다음 크기의 문자열을 구하는 문제.


/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// * 해결 방법

EX) 2 4 3 1 로 예시를 들면,

1. 바뀔 위치의 Index 를 구한다.
즉, w[i - 1] < w[i]  다음 문자가 전의 문자보다 크다면
ChangeIndex = i - 1; 이 된다. -1 에 주목해라.
Ex) 그러므로 ChangeIndex 는 2.
또한, charContainer 에 이후 문자열들을 담는다.

2. 만약 찾지 못했다면, Changeindex == -1 이라면
return "no answer";

3. 만약 존재한다면, w[ChangeIndex] 의 '바로 다음 큰 숫자' 를 구한다.
Ex) chMin = 3 이 된다.

4. 위에서 구한 chMin 과 w[ChangeIndex] 와 Swap 한다.
그리고 이후 charContainer 의 문자들을 순서대로 정렬 시킨후,

5. ResultStr 에 포함시켜 출력.

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// * 시행착오

string ResultStr(const string& str, size_t pos, size_t len = npos);
를 기억하자. - cplusplus 에선 substring 으로 정의되어 있다.

string ResultStr(const char* s, size_t n);
을 써도 됬을 거 같다. - cplusplus 에선 from c-string 으로 정의되어 있다.

pos 는 바운더리 개념이고, len 은 그 바운더리에서부터의 길이이다. ( iter 와 같은 ) 

딱히 막힘은 없었다.
하지만, 규칙을 찾아내는데. 시간이 오래 걸렸다.
특히 다음의 큰 문자를 구하는 로직을 어떻게 짤지 생각을 많이 했었던거 같다.

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// * 느낀점

속도를 조금 더 올려야할거 같다.
또, 적당한 예시를 찾는 것도 중요한 거 같다.
거기에서 규칙을 발견할 수 있으니깐.
결국 모든게 속도이다...

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////






